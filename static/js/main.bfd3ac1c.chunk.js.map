{"version":3,"sources":["Components/Cards/Cards.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Charts.jsx","Components/CountryPicker/CountryPicker.jsx","images/covid.jpg","App.js","index.js","App.module.css","Components/Charts/Charts.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toString","url","fetchData","country","a","changableurl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Charts","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handelCountryChange","fetchedCountires","setFetchedCountires","FormControl","StylesProvider","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","fetchedData","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfd3ac1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1s5U8\",\"card\":\"Cards_card__-m-Ti\",\"infected\":\"Cards_infected__2ijDs\",\"recovered\":\"Cards_recovered__3F5Uz\",\"deaths\":\"Cards_deaths__2W4lp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1WVkM\"};","import React  from 'react';\r\nimport styles from './Cards.module.css'  \r\n\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed)\r\n    return 'Loading......';\r\n\r\n\r\n    return(\r\n\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12}  md={3}  className={cx(styles.Card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0}  end={confirmed.value}  duration={2.5} separator=\",\"  />\r\n                       </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toString()} </Typography>\r\n                        <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card}  xs={12}  md={3}  className={cx(styles.Card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0}  end={recovered.value}  duration={2.5} separator=\",\"  />\r\n                       </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toString()} </Typography>\r\n                        <Typography variant=\"body2\"> Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12}  md={3}  className={cx(styles.Card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp  start={0}  end={deaths.value}  duration={2.5} separator=\",\"  />\r\n                       </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toString()} </Typography>\r\n                        <Typography variant=\"body2\"> Number of deaths caused by  COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'; \r\n\r\n\r\nconst url ='https://covid19.mathdro.id/api';  \r\n  \r\nexport const fetchData = async (country) => {  \r\n    let changableurl = url;  \r\n    if(country){  \r\n        changableurl = `${url}/countries/${country}`  \r\n    }  \r\n    try {  \r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changableurl);  \r\n        return {confirmed, recovered, deaths, lastUpdate};  \r\n    }  \r\n    catch(error){  \r\n        console.log(error);  \r\n    }  \r\n};  \r\n\r\nexport const fetchDailyData = async () =>{  \r\n    try{  \r\n        const {data}  = await axios.get(`${url}/daily`);  \r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));  \r\n    }  \r\n    catch(error){  \r\n        return error  \r\n    }  \r\n};  \r\n\r\nexport const fetchCountries = async () =>{  \r\n    try{  \r\n    const {data:{countries}} = await axios.get(`${url}/countries`);  \r\n    return countries.map((country)=> country.name);  \r\n    }     \r\n    catch(error){  \r\n        return error  \r\n    }  \r\n}; ","import React,{useState, useEffect} from 'react';  \r\nimport { fetchDailyData } from '../../api';  \r\nimport { Line, Bar } from 'react-chartjs-2';  \r\nimport styles from './Charts.module.css' ; \r\n\r\nconst Charts =({data : { confirmed, deaths, recovered}, country})=> {\r\n\r\n      const [dailyData, setDailyData]=useState([]);\r\n\r\n      useEffect(()=> {\r\n        const fetchAPI= async()=> {\r\n          setDailyData(await fetchDailyData());\r\n        }\r\n\r\n       \r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const lineChart=(\r\n      dailyData.length  ///0 \r\n      ? (\r\n      <Line \r\n        data={{\r\n          labels:dailyData.map(({date})=> date),\r\n          datasets:[{\r\n              data:dailyData.map(({confirmed})=> confirmed),\r\n              label:'Infected',\r\n              borderColor:'#3333ff',\r\n              fill: true,\r\n\r\n          },{\r\n\r\n            data:dailyData.map(({deaths})=> deaths),\r\n            label:'Deaths',\r\n            borderColor:'red',\r\n            backgroundColor: 'rgba(255,0,0.0.5)',\r\n            fill: true,\r\n\r\n          }],\r\n\r\n\r\n\r\n        }}\r\n      />): null\r\n\r\n    );\r\n\r\n        const barChart =(\r\n        confirmed\r\n          ?(\r\n            <Bar\r\n              data={{\r\n\r\n                labels: ['Infected', 'Recoverd', 'Deaths'],\r\n                datasets:[{\r\n                  label:'People',\r\n                  backgroundColor:[\r\n                    'rgba(0, 0, 255, 0.5)',\r\n                    'rgba(0, 255, 0, 0.5)',\r\n                    'rgba(255, 0, 0, 0.5)',\r\n\r\n                  ], data: [confirmed.value, recovered.value, deaths.value]\r\n\r\n                }]\r\n              }}\r\n              options={{\r\n                legend:{ display:false},\r\n                title: {display:true, text:`current state in ${country}`},\r\n\r\n\r\n              }}\r\n            \r\n            />\r\n\r\n\r\n          ): null\r\n\r\n        );  // barchat\r\n  \r\n    return (  \r\n      <div  className={styles.container}>\r\n        { country ? barChart:lineChart}\r\n{}\r\n\r\n      </div>\r\n    )  \r\n}  // end charts\r\n\r\nexport default Charts;","import React  from 'react';\r\nimport  {useState, useEffect} from 'react';  \r\nimport {NativeSelect, FormControl, StylesProvider} from '@material-ui/core';  \r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';  \r\n\r\n\r\nconst CountryPicker =({handelCountryChange}) => {\r\n    const [fetchedCountires, setFetchedCountires] = useState([]); \r\n\r\n    useEffect(()=>{  \r\n        const fetchAPI = async () =>{  \r\n            setFetchedCountires(await fetchCountries());  \r\n        }  \r\n        fetchAPI();  \r\n    }, [setFetchedCountires]);  \r\n\r\n    return(\r\n\r\n        <FormControl className={StylesProvider.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handelCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option> \r\n                {fetchedCountires.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid.620ba722.jpg\";","import React from 'react';  \r\n\r\nimport {Cards, Charts, CountryPicker } from './Components'  \r\nimport styles from './App.module.css'  \r\nimport coronaImage from './images/covid.jpg';  \r\n\r\nimport { fetchData } from './api/index';\r\n\r\nclass App extends React.Component {  \r\n    \r\n\r\n    state ={\r\n\r\n        data: {},\r\n        country : '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        const fetchedData= await fetchData();\r\n        \r\n        this.setState({data:fetchedData});\r\n    }\r\n    \r\n    handelCountryChange= async (country) => {\r\n        const data = await fetchData(country);  \r\n        this.setState({data: data, country: country}); \r\n\r\n\r\n    }\r\n\r\n    render(){ \r\n        const {data, country }=this.state; \r\n       return(  \r\n       <div className={styles.container} >\r\n            <img className={styles.image} src={coronaImage} alt=\"Covid-19\"/>\r\n           <Cards data={data} />\r\n           <CountryPicker  handelCountryChange={this.handelCountryChange}/>\r\n           <Charts  data ={data}  country={country}/>\r\n           \r\n       </div>  \r\n    );  \r\n}  \r\n}  \r\n  \r\nexport default App;","import React from 'react';  \r\nimport ReactDom from 'react-dom';  \r\nimport App from './App';  \r\n  \r\n//first component is App, second parameter is the element we want to render it on  \r\nReactDom.render(<App />, document.getElementById('root')); ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZrBo\",\"image\":\"App_image__3m3ds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3TazE\"};"],"sourceRoot":""}